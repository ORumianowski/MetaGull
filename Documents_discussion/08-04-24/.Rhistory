rd_effort = reading_effort %>%
as.data.frame() %>%
slice(4:1)
kable(rd_effort, align = "c")
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_integrated_v10_7_3_2_real.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
"rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_integrated_v10_7_2_real.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
"rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
MCMCtrace(out1, params = c("phi",
"kappa"), ind = TRUE, pdf = FALSE)
out1$mean$eta_monitored
out1$mean$nu_monitored
MCMCtrace(out1, params = c("eta_monitored"), ind = TRUE, pdf = FALSE)
library(ggplot2)
data_ = t(out1[["mean"]][["B"]])
df <- data.frame(
Temps = rep(seq_len(nrow(data_)), time = ncol(data_)),
Population = rep(c("pop1", "pop2", "pop3", "pop4", "pop5"), each = nrow(data_)),
Valeur = as.vector(data_))
ggplot(df, aes(x = Temps, y = Valeur, color = Population)) +
geom_line() +
labs(title = "Effectifs des 5 populations - d'après l'analyse",
x = "Temps",
y = "Nombre d'individus") +
theme_minimal()
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
"rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_integrated_v10_6_2_real.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
"rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
MCMCtrace(out1, params = c("phi",
"kappa"), ind = TRUE, pdf = FALSE)
MCMCtrace(out1, params = c("phi",
"rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
data_ = t(out1[["mean"]][["B"]])
df <- data.frame(
Temps = rep(seq_len(nrow(data_)), time = ncol(data_)),
Population = rep(c("pop1", "pop2", "pop3", "pop4", "pop5"), each = nrow(data_)),
Valeur = as.vector(data_))
ggplot(df, aes(x = Temps, y = Valeur, color = Population)) +
geom_line() +
labs(title = "Effectifs des 5 populations - d'après l'analyse",
x = "Temps",
y = "Nombre d'individus") +
theme_minimal()
data_ = t(out1[["mean"]][["N"]])
df <- data.frame(
Temps = rep(seq_len(nrow(data_)), time = ncol(data_)),
Population = rep(c("pop1", "pop2", "pop3", "pop4", "pop5"), each = nrow(data_)),
Valeur = as.vector(data_))
ggplot(df, aes(x = Temps, y = Valeur, color = Population)) +
geom_line() +
labs(title = "Effectifs des 5 populations - d'après l'analyse",
x = "Temps",
y = "Nombre d'individus") +
theme_minimal()
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
library(tidyverse)
library(ggplot2)
library(MCMCvis)
library(knitr)
library(patchwork)
#load(file = "out1_integrated_v10_4.Rda")
load(file = "out1_integrated_v10_7_2_real.Rda")
out1$mean$phi
PR_unif_01 <- runif(1E9, 0, 1)
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_integrated_v10_7_3_fidelity_v2_real.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
"rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
out1$mean$nu_monitored
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_cmr_AE_v12_priors.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
#  "rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_cmr_AE_v12_prior_p.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
#  "rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
MCMCtrace(out1, params = c("rho",
"kappa"), ind = TRUE, pdf = FALSE)
out1$mean$eta_monitored
out1$mean$nu_monitored
out1$mean
MCMCtrace(out1, params = c("phi",
#  "rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
MCMCtrace(out1, params = c("po"), ind = TRUE, pdf = FALSE)
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_integrated_v10_6_simul_AE.Rda")
MCMCtrace(out1, params = c("phi",
#  "rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
out1$mean$eta_monitored
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_cmr_AE_v12_2.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
#  "rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
out1$mean$eta_monitored
out1$mean$nu_monitored
mean(out1$mean$po[6,])
mean(out1$mean$po[7:10,])
library(ggplot2)
data_ = t(out1[["mean"]][["B"]])
df <- data.frame(
Temps = rep(seq_len(nrow(data_)), time = ncol(data_)),
Population = rep(c("pop1", "pop2", "pop3", "pop4", "pop5"), each = nrow(data_)),
Valeur = as.vector(data_))
ggplot(df, aes(x = Temps, y = Valeur, color = Population)) +
geom_line() +
labs(title = "Effectifs des 5 populations - d'après l'analyse",
x = "Temps",
y = "Nombre d'individus") +
theme_minimal()
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
"rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_cmr_AE_v12_priors2.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
"rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/meso/on_real_dataset/res/out1_cmr_AE_v12_prior_p.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
# "rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
out1$mean
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, cache = FALSE)
load(file = "out1_cmr_AE_v12_priors.Rda")
load(file = "out1_cmr_AE_v12_priors2.Rda")
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, cache = FALSE)
load(file = "out1_cmr_AE_v12_priors_3.Rda")
load("C:/Users/33763/Documents/CMRi/0_Github/MetaGull/Documents_discussion/08-04-24/out1_integrated_v10_6_simul_AE.Rda")
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
# "rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
library(MCMCvis)
MCMCtrace(out1, params = c("phi",
"rho",
"kappa"),
Rhat = TRUE,
ind = TRUE, pdf = FALSE)
out1$mean$eta_monitored
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, cache = FALSE)
load(file = "out1_cmr_AE_v12_priors2.Rda")
load(file = "out1_semi_cmr_AE_v12.txt.Rda")
load(file = "out1_cmr_AE_v12_prior_p.Rda")
load(file = "out1_cmr_AE_v12_priors3.Rda")
load(file = "out1_semi_cmr_AE_v12.txt.Rda")
out_0 = out1
load(file = "out1_cmr_AE_v12_prior_p.Rda")
out_1 = out1
load(file = "out1_cmr_AE_v12_priors3.Rda")
out_2 = out1
p1 = out1$mean$po[6,] %>%
as.data.frame() %>%
mutate(., val = .) %>%
ggplot(., aes(x =val)) +
geom_histogram() +
labs(title = "La Ronze")
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, cache = FALSE)
library(tidyverse)
library(ggplot2)
library(MCMCvis)
library(knitr)
library(patchwork)
library(hrbrthemes)
load(file = "out1_semi_cmr_AE_v12.txt.Rda")
out_0 = out1
load(file = "out1_cmr_AE_v12_prior_p.Rda")
out_1 = out1
load(file = "out1_cmr_AE_v12_priors3.Rda")
out_2 = out1
p1 = out1$mean$po[6,] %>%
as.data.frame() %>%
mutate(., val = .) %>%
ggplot(., aes(x =val)) +
geom_histogram() +
labs(title = "La Ronze")
p1
out1$mean$po[6,] %>%
as.data.frame() %>%
mutate(., val = .)
out1$mean$po[6,] %>%
as.data.frame()
out1$mean$po[6,]
out1$mean$po[6,] %>%
as.data.frame() %>%
mutate(., val = .)
dt = data.frame(value = out1$mean$po[6,],
type = "LR")
dt
out1$mean$po[6:7,]
out1$mean$po[6:7,] %>% t()
out1$mean$po[6:7,] %>%
t() %>%
as.data.frame()
out1$mean$po[6:9,] %>%
t() %>%
as.data.frame()
dt_p =out1$mean$po[6:9,] %>%
t() %>%
as.data.frame()
colnames(dt_p) c("LR", "MA", "VE", "V5")
colnames(dt_p) = c("LR", "MA", "VE", "V5")
dt_p
dt_p %>%
pivot_longer(cols = everything(),
names_to = "Colonne",
values_to = "Valeur")
f = dt_p %>%
pivot_longer(cols = everything(),
names_to = "Colonne",
values_to = "Valeur")
f
dt_p %>%
pivot_longer()
dt_p %>%
pivot_longer(cols = everything())
f =dt_p %>%
pivot_longer(cols = everything(),
names_to = "Type",
values_to = "Valeur")
$
# out1$mean$po[6,] %>%
#   as.data.frame() %>%
#   mutate(., val = .)
#
# dt = data.frame(value = out1$mean$po[6,],
#            type = "LR")
dt_p =out1$mean$po[6:9,] %>%
t() %>%
as.data.frame()
colnames(dt_p) = c("LR", "MA", "VE", "V5")
f =dt_p %>%
pivot_longer(cols = everything(),
names_to = "Type",
values_to = "Valeur")
dt_p
dt_p =out1$mean$po[6:9,] %>%
t() %>%
as.data.frame()
colnames(dt_p) = c("LR", "MA", "VE", "V5")
dt_p
dt_p %>%
pivot_longer(cols = everything(),
names_to = "Type",
values_to = "Valeur")
dt_p
dt_p %>%
pivot_longer(cols = everything(),
names_to = "Type",
values_to = "Valeur")
out1$mean$po[6:9,] %>%
t() %>%
as.data.frame()
dt_p %>%
mutate(year = 1:nrow(.)) %>%
pivot_longer(cols = -year,
names_to = "Type",
values_to = "Valeur")
dt_p =out1$mean$po[6:9,] %>%
t() %>%
as.data.frame()
colnames(dt_p) = c("LR", "MA", "VE", "V5")
dt_p =dt_p %>%
mutate(year = 1:nrow(.)) %>%
pivot_longer(cols = -year,
names_to = "Type",
values_to = "Valeur")
dt_p
# Create data
names <- c(rep("A", 80) , rep("B", 50) , rep("C", 70))
value <- c( rnorm(80 , mean=10 , sd=9) , rnorm(50 , mean=2 , sd=15) , rnorm(70 , mean=30 , sd=10) )
data <- data.frame(names,value)
# Basic boxplot
boxplot(data$value ~ data$names , col=terrain.colors(4) )
# Add data points
mylevels <- levels(data$names)
levelProportions <- summary(data$names)/nrow(data)
for(i in 1:length(mylevels)){
thislevel <- mylevels[i]
thisvalues <- data[data$names==thislevel, "value"]
# take the x-axis indices and add a jitter, proportional to the N in each level
myjitter <- jitter(rep(i, length(thisvalues)), amount=levelProportions[i]/2)
points(myjitter, thisvalues, pch=20, col=rgb(0,0,0,.9))
}
# Create data
names <- c(rep("A", 80) , rep("B", 50) , rep("C", 70))
value <- c( rnorm(80 , mean=10 , sd=9) , rnorm(50 , mean=2 , sd=15) , rnorm(70 , mean=30 , sd=10) )
data <- data.frame(names,value)
data
dt_p
dt_p
ggplot(dt_p, aes(x = Type, y = Valeur)) +
geom_boxplot() +
geom_jitter()
dt_p
dt_p = dt_p %>%
subset(., Valeur != 0)
ggplot(dt_p, aes(x = Type, y = Valeur)) +
geom_boxplot() +
geom_jitter()
dt_p <- out1$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
pivot_longer(cols = -year,
names_to = "Type",
values_to = "Valeur")
dt_p
dt_p_0 <- out_0$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = 0) %>%
pivot_longer(cols = -year,
names_to = "Type",
values_to = "Valeur")
dt_p_0
dt_p_0 <- out_0$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = 0) %>%
pivot_longer(cols = -year,
names_to = "Type",
values_to = "Valeur")
dt_p_0
dt_p_0 <- out_0$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep(0, nrow(.))) %>%
pivot_longer(cols = -year,
names_to = "Type",
values_to = "Valeur")
dt_p_0
dt_p_0 <- out_0$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep(0, nrow(.))) %>%
pivot_longer(cols = -year,
names_to = "Type",
values_to = "Valeur")
dt_p_0
out_0$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep(0, nrow(.)))
dt_p_0 <- out_0$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep(0, nrow(.))) %>%
pivot_longer(cols = -c(year, dataset),
names_to = "Type",
values_to = "Valeur")
dt_p_0
dt_p_0 <- out_0$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep(0, nrow(.))) %>%
pivot_longer(cols = -c(year, dataset),
names_to = "Type",
values_to = "Valeur")
dt_p_1 <- out_1$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep(1, nrow(.))) %>%
pivot_longer(cols = -c(year, dataset),
names_to = "Type",
values_to = "Valeur")
dt_p_2 <- out_2$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep(2, nrow(.))) %>%
pivot_longer(cols = -c(year, dataset),
names_to = "Type",
values_to = "Valeur")
dt_p = rbind(dt_p_0, dt_p_1, dt_p_2)
dt_p
dt_p = rbind(dt_p_0, dt_p_1, dt_p_2) %>%
subset(., Valeur != 0)
dt_p
ggplot(dt_p, aes(x = Type, y = Valeur)) +
geom_boxplot() +
geom_jitter()
ggplot(dt_p, aes(x = Type, y = Valeur, fill = dataset)) +
geom_boxplot() +
geom_jitter()
dt_p_0 <- out_0$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep(d0, nrow(.))) %>%
pivot_longer(cols = -c(year, dataset),
names_to = "Type",
values_to = "Valeur")
dt_p_0 <- out_0$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep("d0", nrow(.))) %>%
pivot_longer(cols = -c(year, dataset),
names_to = "Type",
values_to = "Valeur")
dt_p_1 <- out_1$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep("d1", nrow(.))) %>%
pivot_longer(cols = -c(year, dataset),
names_to = "Type",
values_to = "Valeur")
dt_p_2 <- out_2$mean$po[6:9,] %>%
t() %>%
as.data.frame() %>%
setNames(c("LR", "MA", "VE", "V5")) %>%
mutate(year = 1:nrow(.)) %>%
mutate(dataset = rep("d2", nrow(.))) %>%
pivot_longer(cols = -c(year, dataset),
names_to = "Type",
values_to = "Valeur")
dt_p = rbind(dt_p_0, dt_p_1, dt_p_2) %>%
subset(., Valeur != 0)
ggplot(dt_p, aes(x = Type, y = Valeur, fill = dataset)) +
geom_boxplot() +
geom_jitter()
ggplot(dt_p, aes(x = Type, y = Valeur, fill = dataset, color = dataset)) +
geom_boxplot() +
geom_jitter()
ggplot(dt_p, aes(x = Type, y = Valeur, fill = dataset, color = dataset)) +
geom_boxplot() +
geom_jitter(fill = dataset)
ggplot(dt_p, aes(x = Type, y = Valeur, fill = dataset, color = dataset)) +
geom_boxplot() +
geom_jitter(aes(fill = dataset, color = dataset), width = 0.2, size = 3)
ggplot(dt_p, aes(x = Type, y = Valeur, fill = dataset, color = dataset)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge())
ggplot(dt_p, aes(x = Type, y = Valeur, fill = dataset, color = dataset)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +  # Réduire la transparence des boîtes et supprimer les outliers
geom_jitter(position = position_jitterdodge(), alpha = 0.8, color = "black", size = 3)  # Changer l'alpha, la couleur et la taille des points
ggplot(dt_p, aes(x = Type, y = Valeur, fill = dataset, color = dataset)) +
geom_boxplot(alpha = 0.5) +
geom_jitter(position = position_jitterdodge())
